#################################################################################################
# The "builder" Stage
# - builds mina and any other binaries required to run `make deb`
#################################################################################################
# The container to pull artifacts from, expected to be from stage 2-opam-deps
# but it can also be supplied as a build arg to pull from a specific pre-built image for speed
ARG MINA_OPAM_DEPS_STAGE=opam-deps
FROM ${MINA_OPAM_DEPS_STAGE} AS builder

# Use --build-arg "DUNE_PROFILE=dev" to build a dev image or for CI
ARG DUNE_PROFILE=devnet

# branch to checkout on first clone (this will be the only available branch in the container)
# can also be a tagged release
ARG MINA_BRANCH=develop

# repo to checkout the branch from
ARG MINA_REPO=https://github.com/MinaProtocol/mina

# location of repo used for pins and external package commits
ARG MINA_DIR=mina

# Version codenames and string to use for the debian package builds
ARG deb_codename=bullseye
ARG deb_version=1.3.1.2

WORKDIR $HOME

ARG MINA_COMMIT=25388a0fed9695e8e9d04f75f50c2bae1c9c80db # 1.3.1.2 Stable Release (latest master at time of writing)
# --- Export the mina commit sha to use in rebuild.sh
ENV MINA_COMMIT_SHA1=${MINA_COMMIT}

# --- Shallow Clone the Mina repo from a given commit
# Delete any previous clones of the mina repo and then clone into an empty directory
RUN rm -rf ${MINA_DIR} && mkdir ${MINA_DIR} && cd ${MINA_DIR} \
  && git init \
  && git remote add origin ${MINA_REPO} \
  && git fetch --depth 1 origin ${MINA_COMMIT} \
  && git checkout FETCH_HEAD \
  && git submodule update --init --recursive
# Set the working directory to the cloned mina repo
WORKDIR $HOME/${MINA_DIR}

# --- Build all major tagets required for packaging and the packages themselves
RUN echo "--- Build all major tagets required for packaging from Commit SHA: ${MINA_COMMIT_SHA1}" \
   && mkdir ${HOME}/app \
   && make libp2p_helper \
   && mv src/app/libp2p_helper/result/bin/libp2p_helper ${HOME}/app/libp2p_helper \
   && eval $(opam config env) \
   && dune build --profile=${DUNE_PROFILE} \
    src/app/logproc/logproc.exe \
    src/app/runtime_genesis_ledger/runtime_genesis_ledger.exe \
    src/app/generate_keypair/generate_keypair.exe \
    src/app/validate_keypair/validate_keypair.exe \
    src/app/cli/src/mina.exe \
    src/app/cli/src/mina_testnet_signatures.exe \
    src/app/cli/src/mina_mainnet_signatures.exe \
    src/app/archive/archive.exe \
    src/app/archive_blocks/archive_blocks.exe \
    src/app/extract_blocks/extract_blocks.exe \
    src/app/swap_bad_balances/swap_bad_balances.exe \
    src/app/missing_blocks_auditor/missing_blocks_auditor.exe \
    src/app/replayer/replayer.exe \
    src/app/rosetta/rosetta.exe \
    src/app/rosetta/rosetta_testnet_signatures.exe \
    src/app/rosetta/rosetta_mainnet_signatures.exe \
    src/app/rosetta/ocaml-signer/signer.exe \
    src/app/test_executive/test_executive.exe \
    src/app/zkapp_test_transaction/zkapp_test_transaction.exe \
   && echo "Packaging debs from Commit SHA: ${MINA_COMMIT_SHA1} and moving them to /tmp/artifacts/" \
   && make deb \
   && rm -rf _build

WORKDIR /tmp/artifacts/
USER root
