#################################################################################################
# The "toolchain" Stage
# - installs optional tools that are required in our CI/CD but are not required to build mina
#################################################################################################
FROM opam-deps AS toolchain

ARG DOCKER_VERSION=28.3.1
ARG DEBS3_VERSION=0.11.7
ARG INFLUXDB_CLI_VERSION=2.7.5
ARG SHELLCHECK_VERSION=0.10.0

USER root

# OS package dependencies
RUN apt-get update --yes \
  && apt-get install --yes --no-install-recommends \
    aptly \
    apt-transport-https \
    apt-utils \
    dnsutils \
    fakeroot \
    gnupg2 \
    jq \
    libgmp10 \
    libgomp1 \
    lsb-release \
    pandoc \
    patchelf \
    postgresql \
    postgresql-contrib \
    perl \
    procps \
    python3 \
    python3-pip \
    python3-sexpdata \
    rubygems \
    wget \
  && rm -rf /var/lib/apt/lists/*

# --- deb-s3 tool
# Custom version, with lock only on manifest upload
RUN curl -sLO https://github.com/MinaProtocol/deb-s3/releases/download/${DEBS3_VERSION}/deb-s3-${DEBS3_VERSION}.gem \
    && gem install deb-s3-${DEBS3_VERSION}.gem \
    && rm -f deb-s3-${DEBS3_VERSION}.gem

# --- influx db tool
# Custom version, with lock only on manifest upload
SHELL ["/bin/bash", "-o", "pipefail", "-c"]
RUN curl -L -o influxdb2-client-${INFLUXDB_CLI_VERSION}-linux-${TARGETARCH}.tar.gz https://download.influxdata.com/influxdb/releases/influxdb2-client-${INFLUXDB_CLI_VERSION}-linux-${TARGETARCH}.tar.gz \
    && mkdir -p "influx_dir" && tar xvzf influxdb2-client-${INFLUXDB_CLI_VERSION}-linux-${TARGETARCH}.tar.gz -C influx_dir \
    && cp influx_dir/influx /usr/local/bin/ \
    && rm influxdb2-client-${INFLUXDB_CLI_VERSION}-linux-${TARGETARCH}.tar.gz \
    && rm -rf influx_dir

# --- Docker Daemon
RUN curl -sL https://download.docker.com/linux/static/stable/${CANONICAL_ARCH}/docker-${DOCKER_VERSION}.tgz \
    | tar --extract --gzip --strip-components 1 --directory=/usr/bin --file=-

# --- Google Cloud tools
RUN echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | \
    tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \
    && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | \
    gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg \
    && apt-get update -y && apt-get install --no-install-recommends -y google-cloud-sdk kubectl \
    && rm -rf /var/lib/apt/lists/*

ENV USE_GKE_GCLOUD_AUTH_PLUGIN=True

# --- yarn + nodejs, pinned version
RUN curl -sL https://deb.nodesource.com/setup_20.x | bash - \
    && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
    && echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list \
    && apt-get update --yes \
    && apt-get install --yes --no-install-recommends nodejs yarn \
    && rm -rf /var/lib/apt/lists/*

# --- Hadolint
RUN curl -sL https://github.com/hadolint/hadolint/releases/download/v$HADOLINT_VERSION/hadolint-Linux-${DEBIAN_ARCH} \
    -o /usr/bin/hadolint \
    && chmod +x /usr/bin/hadolint

# --- Shellcheck
RUN curl -sL https://github.com/koalaman/shellcheck/releases/download/v$SHELLCHECK_VERSION/shellcheck-v$SHELLCHECK_VERSION.linux.${DEBIAN_ARCH}.tar.xz \
    | tar --extract --file=- --xz --strip-components=1 --directory=/usr/bin shellcheck-v$SHELLCHECK_VERSION/shellcheck

USER opam
