#################################################################################################
# The "rosetta" Stage
# - sets up the final container with built binaries and a running postgresql archive node setup
#################################################################################################
# Supports debian:stretch-slim, debian:buster-slim, and ubuntu:focal
ARG image=ubuntu:focal
FROM ${image} AS rosetta
ARG deb_codename=focal

ARG psql_version=13

ARG MINA_DAEMON_PORT=10101
ARG MINA_CONFIG_DIR=/data/.mina-config
# Sample public key for use in dev profile / demo mode genesis block
ARG PK=B62qiZfzW27eavtPrnF6DeDSAKEjXuGFdkouC3T5STRa6rrYLiDUP2p

ARG ROSETTA_CLI_VERSION=v0.10.1

# --- Dependencies across many platforms
RUN DEBIAN_FRONTEND=noninteractive apt-get update --quiet --yes \
  && DEBIAN_FRONTEND=noninteractive apt-get upgrade --quiet --yes \
  && DEBIAN_FRONTEND=noninteractive apt-get install --quiet --yes --no-install-recommends \
    apt-utils \
    apt-transport-https \
    curl \
    ca-certificates \
    dnsutils \
    dumb-init \
    gettext \
    gnupg2 \
    libgmp10 \
    libgomp1 \
    libssl1.1 \
    tzdata \
    jq \
    sudo \
    'libjemalloc.$' \
    'libffi.$' \
    'libprocps.$' \
  && rm -rf /var/lib/apt/lists/*

# --- Install Postgresql
RUN curl -s https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
    && echo deb https://apt-archive.postgresql.org/pub/repos/apt/ "$deb_codename"-pgdg-archive main | tee /etc/apt/sources.list.d/pgdg.list \
    && apt-get update -y \
    && apt-get install -y \
       postgresql-"$psql_version" \
       postgresql-client-"$psql_version"

# --- Install rosetta-cli

# The following commands install rosetta-cli with an updated rosetta-sdk-go dependency, which supports delegation transactions.
# Upstream PR to rosetta-sdk-go: https://github.com/coinbase/rosetta-sdk-go/pull/457
# They can be replaced once there is a new release of rosetta-cli containing the above change by:
# RUN curl -sSfL https://raw.githubusercontent.com/coinbase/rosetta-cli/${ROSETTA_CLI_VERSION}/scripts/install.sh | sh -s
COPY --from=rosetta-builder /usr/lib/go /usr/lib/go
RUN apt-get install -y gcc
RUN export GOBIN="$(pwd)/bin" \
  && curl -L "https://github.com/coinbase/rosetta-cli/archive/refs/tags/v0.10.1.tar.gz" -o "/tmp/v0.10.1.tar.gz" \
  && tar xzf "/tmp/v0.10.1.tar.gz" -C "/tmp" \
  && cd "/tmp/rosetta-cli-0.10.1" \
  && /usr/lib/go/bin/go mod edit -replace github.com/coinbase/rosetta-sdk-go@v0.8.1=github.com/MinaProtocol/rosetta-sdk-go@stake-delegation-v1 \
  && /usr/lib/go/bin/go mod tidy \
  && /usr/lib/go/bin/go install

# --- Remove apt-cache and generate en_US.UTF-8 locale to allow use of O(1) Labs DB dumps
RUN rm -rf /var/lib/apt/lists/* \
  && locale-gen en_US.UTF-8

# --- Set up sample/demo wallets and configuration
RUN mkdir -p --mode=700 ${MINA_CONFIG_DIR}/wallets/store/ \
  && echo "$PK" >  ${MINA_CONFIG_DIR}/wallets/store/$PK.pub \
  && echo '{"box_primitive":"xsalsa20poly1305","pw_primitive":"argon2i","nonce":"6pcvpWSLkMi393dT5VSLR6ft56AWKkCYRqJoYia","pwsalt":"ASoBkV3NsY7ZRuxztyPJdmJCiz3R","pwdiff":[134217728,6],"ciphertext":"Dmq1Qd8uNbZRT1NT7zVbn3eubpn9Myx9Je9ZQGTKDxUv4BoPNmZAGox18qVfbbEUSuhT4ZGDt"}' \
  > ${MINA_CONFIG_DIR}/wallets/store/${PK} \
  && chmod go-rwx ${MINA_CONFIG_DIR}/wallets/store/${PK}

# --- Copy artifacts from the 3-builder stage
COPY --from=rosetta-builder /home/opam/mina/src/app/rosetta/rosetta-cli-config/*.json /rosetta/rosetta-cli-config/
COPY --from=rosetta-builder /home/opam/mina/src/app/rosetta/rosetta-cli-config/*.ros /rosetta/rosetta-cli-config/
COPY --from=rosetta-builder /home/opam/mina/src/app/archive/*.sql /archive/
COPY --from=rosetta-builder /home/opam/app/* /usr/local/bin/
COPY --from=rosetta-builder /home/opam/mina/src/app/rosetta/*.sh /rosetta/
COPY --from=rosetta-builder /home/opam/mina/src/app/rosetta/*.conf /rosetta/
COPY --from=rosetta-builder /home/opam/mina/src/app/rosetta/README.md /rosetta/
COPY --from=rosetta-builder /home/opam/mina/genesis_ledgers /genesis_ledgers/

# --- Set up postgres
USER postgres
RUN POSTGRES_VERSION=$(psql -V | cut -d " " -f 3 | sed 's/.[[:digit:]]*$//g') \
    && echo "$POSTGRES_VERSION" "$(psql -V)" \
    && echo "host all  all    0.0.0.0/0  md5" >> /etc/postgresql/${POSTGRES_VERSION}/main/pg_hba.conf \
    && pg_dropcluster --stop ${POSTGRES_VERSION} main
# Run as root so it can create /data/postgresql
USER root
RUN POSTGRES_VERSION=$(psql -V | cut -d " " -f 3 | sed 's/.[[:digit:]]*$//g') \
  && pg_createcluster --start -d /data/postgresql --createclusterconf /rosetta/postgresql.conf ${POSTGRES_VERSION} main

# --- Container workdir, ports, entrypoint, etc.
WORKDIR /rosetta

EXPOSE 3087
EXPOSE $MINA_DAEMON_PORT

ENTRYPOINT ["bash", "./docker-start.sh"]
