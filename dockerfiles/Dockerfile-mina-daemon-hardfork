ARG deb_version=latest
ARG deb_codename=bullseye
ARG network=mainnet
ARG docker_repo="gcr.io/o1labs-192920"
ARG deb_release=unstable
ARG deb_legacy_version
ARG deb_repo="http://packages.o1test.net"

FROM ${docker_repo}/mina-daemon:${deb_version}-${deb_codename}-${network} AS mina_daemon_hardfork

# In multi-stage builds, Docker requires to re-declare ARG variables after each FROM 
# to make them available in that stage. 
# Even if the ARG is declared globally before the first FROM, 
# it must be re-declared inside each stage.
ARG deb_version
ARG deb_codename
ARG network
ARG deb_release
ARG deb_legacy_version
ARG deb_repo

RUN echo "Installing legacy package with version $deb_version from repo $deb_release $deb_codename for network $network" \
  && echo "deb [trusted=yes] ${deb_repo} ${deb_codename} ${deb_release}" > /etc/apt/sources.list.d/o1.list \
  && cat /etc/apt/sources.list.d/o1.list \
  && apt-get update --quiet --yes \
  && apt-get install --quiet --yes --allow-downgrades "mina-${network}-legacy=$deb_legacy_version" \
  && rm -rf /var/lib/apt/lists/*

## Reset workdir, USER, and ${UID} for root-owned version
WORKDIR /root/
USER 0
ARG UID=0

COPY --chown=${UID} scripts/daemon-hardfork-entrypoint.sh /hardfork-entrypoint.sh

ENTRYPOINT ["/usr/bin/dumb-init", "/hardfork-entrypoint.sh"]