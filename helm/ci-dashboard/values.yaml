######################################
# CronJob Schedule
######################################
schedule: "*/10 * * * *"


######################################
# InfluxDB Configuration
######################################
influxdb:
  global:
    storageClass: ssd-delete
  persistence:
    enabled: true
    size: 10Gi
  auth:
    admin:
      username: cidash
      password: dashboardtest
      org: o1-labs
      bucket: dashboard-db
      token: ''
  influxdb:
    service:
      type: LoadBalancer

######################################
# DB Pusher Configuration
######################################
dbPusher:
  image:
    name: python
    tag: "3.9.18-slim"
  env:
  - name: INFLUXDB_TOKEN
    value: ''
  - name: INFLUXDB_FILES_SUFFIX
    value: '.dat'
  - name: INFLUXDB_BUCKET
    value: dashboard-db
  script:
    name: "dbPusher.py"
    secret: # Secret to be created with python script
      name: "db-pusher-script"
    mountPath: "/mnt/script"
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi


######################################
# Kubernetes Scheduling parameters
# Specify NodeSelector terms:
######################################
nodeSelector:
#   cloud.google.com/gke-spot: false


#############################################
# Sources endpoint and Token reference
# A secret will be created for each token := {}
#############################################
sources:
- name: "github"
  apiUrl: &githubAPI "https://api.github.com/graphql"
  token:
    secretName: &githubTokenSecretName "github-token-secret"
    secretValue: ''
- name: buildkite
  token:
    secretName: &buildkiteTokenSecretName "buildkite-token-secret"
    secretValue: ''


#############################################
# Output dir reference
# The 'OUTPUTDIR' env will point to a volume
# to be scrapped by DB Pusher container
#############################################
outputEnv:
  name: outputdir # env name to inject into each retriever
  value: "/mnt/output" # mountPath inside each retriever
  volume: # type of volume
    emptyDir:
      medium: "Memory"
      sizeLimit: "50Mi"


######################################
# Retriever Container
# Define container image and other specs
######################################
retrievers:
- name: "github" # this must be the same as folder under 'files/'
  image:
    name: "python"
    tag: "3.9.18-slim"
  env: # define envs as in K8s manifest
  - name: GITHUB_TOKEN
    valueFrom:
      secretKeyRef:
        name: *githubTokenSecretName
        key: token
  - name: GITHUB_API
    value: *githubAPI
  script:
    name: "githubber.py"
    secret: # Secret to be created with python script
      name: "github-retriever-script"
    mountPath: "/mnt/script"
- name: "buildkite"
  image:
    name: "python"
    tag: "3.9.18-slim"
  env:
  - name: BUILDKITE_TOKEN
    valueFrom:
      secretKeyRef:
        name: *buildkiteTokenSecretName
        key: token
  script:
    name: "buildkite.py"
    secret: # Secret with python script
      name: "buildkite-retriever-script"
    mountPath: "/mnt/script"
