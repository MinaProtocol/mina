apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        testnet: {{ $.Values.testnetName }}
        role: watchdog
        version: {{ trunc 6 (split ":" $.Values.coda.image)._1 | trimSuffix "-" }}
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: {{ $.Values.coda.ports.metrics | quote }}
        prometheus.io/path: '/metrics'
    spec:
      containers:
      - name: watchdog
        resources:
          requests:
            memory: 512m
            cpu: 1.0
        image: {{ .Values.image }}
        command: ["python3"]
        args: ["-u", "/code/watchdog.py"]
        env:
          - name: "RESTART_EVERY_MINS"
            value: {{ .Values.restartEveryMins | quote }}
          - name: "RESTART_NODES"
            value: {{ .Values.restartNodes | quote }}
          - name: "MAKE_REPORTS"
            value: {{ .Values.makeReports | quote }}
          - name: "MAKE_REPORT_EVERY_MINS"
            value: {{ .Values.makeReportEveryMins | quote }}
          - name: "MAKE_REPORT_DISCORD_WEBHOOK_URL"
            value: {{ .Values.makeReportDiscordWebhookUrl | quote }}
          - name: "MAKE_REPORT_ACCOUNTS"
            value: {{ .Values.makeReportAccounts | quote }}
          - name: "METRICS_PORT"
            value: {{ $.Values.coda.ports.metrics | quote }}
          - name: "SEED_PEERS_URL"
            value: {{ $.Values.seedPeersURL | quote }}
          - name: "GOOGLE_APPLICATION_CREDENTIALS"
            value: "/gcloud/keyfile.json"
          {{- if $.Values.coda.uploadBlocksToGCloud }}
          - name: "CHECK_GCLOUD_STORAGE_BUCKET"
            value: "true"
          {{- end }}

        ports: 
        - name: metrics-port
          protocol: TCP 
          containerPort: {{ $.Values.coda.ports.metrics }}
        imagePullPolicy: Always
        volumeMounts:
        {{- if $.Values.coda.uploadBlocksToGCloud }}
        - name: gcloud-keyfile
          mountPath: "/gcloud/"
        {{- end }}
      volumes:
      {{- if $.Values.coda.uploadBlocksToGCloud }}
      - name: gcloud-keyfile
        secret:
          secretName: gcloud-keyfile
          defaultMode: 256
          items:
          - key: keyfile
            path: keyfile.json
      {{- end }}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: watchdog-make-reports
spec:
  schedule: "*/30 * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: watchdog
            image: {{ .Values.image }}
            imagePullPolicy: IfNotPresent
            command: ["python3"]
            args: ["/code/make_report.py", 
                   "--incluster", "true", 
                   "--namespace", "", 
                   {{- if .Values.makeReportDiscordWebhookUrl }}
                   "--discord_webhook_url", "$(MAKE_REPORT_DISCORD_WEBHOOK_URL)",
                   {{- end }}
                   {{- if $.Values.makeReportAccounts }}
                   "--accounts", "$(MAKE_REPORT_ACCOUNTS)" 
                   {{- end }}
                  ]
            env:
            {{- if .Values.makeReportDiscordWebhookUrl }}
            - name: "MAKE_REPORT_DISCORD_WEBHOOK_URL"
              value: {{ .Values.makeReportDiscordWebhookUrl | quote }}
            {{- if .Values.makeReportAccount }}
            {{- end }}
            - name: "MAKE_REPORT_ACCOUNTS"
              value: {{ .Values.makeReportAccounts | quote }}
            {{- end }}
          restartPolicy: OnFailure

