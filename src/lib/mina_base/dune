(library
 (name mina_base)
 (public_name mina_base)
 (inline_tests)
 (library_flags -linkall)
 (flags -w -22)
 (libraries
   ;; opam libraries
   async_kernel
   result
   bin_prot.shape
   ppx_inline_test.config
   sexplib0
   yojson
   digestif
   sexp_diff_kernel
   core_kernel
   base.caml
   base
   base.base_internalhash_types
   integers
   base_quickcheck
   base_quickcheck.ppx_quickcheck
   core_kernel.uuid
   ;; local libraries
   mina_wire_types
   run_in_thread
   kimchi_backend_common
   kimchi_backend.pasta
   kimchi_backend.pasta.basic
   mina_base.import
   sgn
   sgn_type
   pickles_types
   blake2
   pickles
   sparse_ledger_lib
   snark_params
   signature_lib
   rosetta_coding
   random_oracle
   hash_prefix_states
   dummy_values
   currency
   mina_numbers
   genesis_constants
   block_time
   base58_check
   bignum_bigint
   mina_compile_config
   codable
   crypto_params
   debug_assert
   fold_lib
   fields_derivers.zkapps
   fields_derivers.json
   fields_derivers.graphql
   one_or_two
   outside_hash_image
   quickcheck_lib
   snarky.backendless
   test_util
   unsigned_extended
   with_hash
   random_oracle_input
   data_hash_lib
   pickles.backend
   mina_signature_kind
   mina_base.util
   kimchi_backend
   hex
   snark_bits
   error_json
   ppx_version.runtime
 )
 (preprocessor_deps ../../config.mlh)
 (preprocess
  (pps ppx_annot ppx_snarky ppx_here ppx_mina ppx_version ppx_compare ppx_deriving.enum ppx_deriving.ord ppx_deriving.make
       ppx_base base_quickcheck.ppx_quickcheck ppx_bench ppx_let ppx_optcomp ppx_sexp_conv ppx_bin_prot ppx_fields_conv ppx_custom_printf ppx_assert ppx_deriving_yojson ppx_inline_test h_list.ppx
       ppx_variants_conv ppx_pipebang
 ))
 (instrumentation (backend bisect_ppx))
 (synopsis "Snarks and friends necessary for keypair generation"))
