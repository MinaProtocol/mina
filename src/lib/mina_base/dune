(library
 (name mina_base)
 (public_name mina_base)
 (inline_tests
  (flags -verbose -show-counts))
 (library_flags -linkall)
 (libraries
  ;; opam libraries
  async_kernel
  base
  base.base_internalhash_types
  base.caml
  base_quickcheck
  base_quickcheck.ppx_quickcheck
  bin_prot.shape
  core_kernel
  core_kernel.uuid
  digestif
  integers
  ppx_inline_test.config
  result
  sexp_diff_kernel
  sexplib0
  yojson
  ;; local libraries
  base58_check
  bignum_bigint
  blake2
  block_time
  codable
  crypto_params
  currency
  data_hash_lib
  debug_assert
  dummy_values
  error_json
  fields_derivers.graphql
  fields_derivers.json
  fields_derivers.zkapps
  fold_lib
  genesis_constants
  hash_prefix_create
  hash_prefix_states
  hex
  kimchi_backend
  kimchi_backend_common
  kimchi_pasta
  kimchi_pasta.basic
  mina_base.import
  mina_base.util
  mina_numbers
  mina_signature_kind
  mina_stdlib
  mina_wire_types
  one_or_two
  outside_hash_image
  pickles
  pickles.backend
  pickles_types
  ppx_version.runtime
  proof_cache_tag
  protocol_version
  quickcheck_lib
  random_oracle
  random_oracle_input
  rosetta_coding
  run_in_thread
  sgn
  sgn_type
  signature_lib
  snark_bits
  snark_params
  snarky.backendless
  sparse_ledger_lib
  test_util
  unsigned_extended
  with_hash)
 (preprocess
  (pps
   ppx_annot
   ppx_snarky
   ppx_here
   ppx_mina
   ppx_version
   ppx_compare
   ppx_deriving.enum
   ppx_deriving.ord
   ppx_deriving.make
   ppx_base
   base_quickcheck.ppx_quickcheck
   ppx_bench
   ppx_let
   ppx_sexp_conv
   ppx_bin_prot
   ppx_fields_conv
   ppx_custom_printf
   ppx_assert
   ppx_deriving_yojson
   ppx_inline_test
   h_list.ppx
   ppx_variants_conv
   ppx_pipebang))
 (instrumentation
  (backend bisect_ppx))
 (synopsis "Snarks and friends necessary for keypair generation"))
