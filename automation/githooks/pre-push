#!/usr/bin/env bash

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"

z40=0000000000000000000000000000000000000000

while read local_ref local_sha remote_ref remote_sha
do
  if [[ "$remote_ref" != "refs/heads/master" ]]; then
    # Skip this hook if we are not pushing to master
    exit 0
  fi

  if [ "$local_sha" = $z40 ]
  then
    echo >&2 "No deleting master"
    exit 1
  else
    # if we touch something other than terraform/testnets/**/*, abort
    if git diff --name-only $local_sha..$remote_sha | grep -v 'terraform.testnets' -q; then
      echo >&2 "Don't push to master directly, you've touched too many files. Please open a branch and do a pull-request first!"
      exit 1
    fi
  fi
done

echo "Only terraform/testnets/**/* was touched, allowing push to master"
exit 0
